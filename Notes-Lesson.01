print 7 + 3 * 4 + 17
print 52 * 3 + 12 * 9
print 52 * (3 + 12) * 9
print 365 * 24 * 60 * 60


First Programming Quiz:

# Write a Python program that prints out the number of minutes in seven weeks.
# Click the "Run" button below to try running your code and see the output,
# and click "Submit" to submit your answer.

print 7 * 7 * 24 * 60


-------


Backus-Naur Form 
Left Side <non-terminal> "arrow" replacement
Terminal's on the right side and finish.

Derivation

------

Python Grammar for Arithmetic Expressions:
Expression -> Expression Operator Expression
Expression -> Number
Operator -> +
Operator -> *
Number -> 0, 1, 2, ...
Expression -> (Expression)

------

Variables
Assignement Statement: Name = Expression
Variables start with a letter or a number.

speed_of_light = 299792458
billionth = 1.0 / 1000000000
cycles_per_second = 2700000000.0
print speed_of_light / cycles_per_second


var = var - 1
The expression is parsed prior to the assignment of the variable.
= means assignment.

If you use a variable that has not been previously assigned Python does 
not default the value of that variable to null or 0. This is due to the
previous mention regarding the assignment is parsed prior to the actual
assignmemnt of that variable. Example var = var - 1 is an error without
first assigning var = 0 or any other number.

age = 21
days_in_year = 365
print age * days_in_year
# LOL! I wrote the same code for this Quiz without looking at the code
# prior to seeing the answer. Minus the .25 added to the end of the
# days_in_year variable.


------

Strings are a siquence of characters surrounded by quotes.
Strings with + means concatination.

Indexing Strings
<string>[<expression>]
Joseph[0] outputs J
Joseph[2 + 3] outputs p

Selecting Sub-Sequences
<string>[<start_expression> : <stop_expression>]
Generates the characters from the reference of start_expression
to the position of stop_expression minus one.

------

#My answer for the quiz.

# page = contents of a web page
page =('<div id="top_bin"><div id="top_content" class="width960">'
'<div class="udacity float-left"><a href="http://udacity.com">')
start_link = page.find('<a href=')
end_link = page.find('"', start_link+9)
url = page[start_link+9:end_link]
print url

#Udacity's Answer for the Quiz

# page = contents of a web page
page =('<div id="top_bin"><div id="top_content" class="width960">'
'<div class="udacity float-left"><a href="http://udacity.com">')
start_link = page.find('<a href=')
start_quote = page.find('"', start_link)
end_quote = page.find('"', start_quote+1
url = page[start_quote+1:end_quote]

#I was attempting to do something like this as I was writing my quiz answer but scrapped it for my answer above.



----



# For example,
#text = 'all zip files are zipped' 
# >>> 18
# text = 'all zip files are compressed'
# >>> -1

text = "all zip files are zipped" 

#ENTER CODE BELOW HERE
look_up = "zip"
first_instance = text.find(look_up)
second_instance = text.find(look_up, first_instance + 1)
print second_instance

------

print str(x + 0.5)[:str(x + 0.5).find('.')]
